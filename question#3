#include <iostream>
using namespace std;

struct Node
{
    int BookID;
    char Title[50];
    char Author[50];
    Node *prev;
    Node *next;
};

class DoublyLinkedList
{
public:
    Node *head;

    DoublyLinkedList()
    {
        head = NULL;
    }

    void addAtEnd()
    {
        Node *n = new Node;
        cout << "Enter Book ID: ";
        cin >> n->BookID;
        cout << "Enter Title (one word): ";
        cin >> n->Title;
        cout << "Enter Author (one word): ";
        cin >> n->Author;
        n->next = NULL;
        n->prev = NULL;

        if (head == NULL)
        {
            head = n;
        }
        else
        {
            Node *temp = head;
            while (temp->next != NULL)
                temp = temp->next;
            temp->next = n;
            n->prev = temp;
        }
    }

    void deleteByID(int id)
    {
        Node *temp = head;
        while (temp != NULL)
        {
            if (temp->BookID == id)
            {
                if (temp->prev != NULL)
                    temp->prev->next = temp->next;
                else
                    head = temp->next;

                if (temp->next != NULL)
                    temp->next->prev = temp->prev;

                delete temp;
                cout << "Book deleted.\n";
                return;
            }
            temp = temp->next;
        }
        cout << "Book not found.\n";
    }

    void displayForward()
    {
        Node *temp = head;
        if (temp == NULL)
        {
            cout << "No books in list.\n";
            return;
        }

        cout << "Books (Forward):\n";
        while (temp != NULL)
        {
            cout << temp->BookID << " | " << temp->Title << " | " << temp->Author << endl;
            temp = temp->next;
        }
    }

    void displayBackward()
    {
        Node *temp = head;
        if (temp == NULL)
        {
            cout << "No books in list.\n";
            return;
        }

        while (temp->next != NULL)
            temp = temp->next;

        cout << "Books (Backward):\n";
        while (temp != NULL)
        {
            cout << temp->BookID << " | " << temp->Title << " | " << temp->Author << endl;
            temp = temp->prev;
        }
    }
};

int main()
{
    DoublyLinkedList list;
    int choice, id;

    while (true)
    {
        cout << "\n1. Add Book\n2. Delete Book\n3. Display Forward\n4. Display Backward\n5. Exit\n";
        cout << "Enter choice: ";
        cin >> choice;

        if (choice == 1)
            list.addAtEnd();
        else if (choice == 2)
        {
            cout << "Enter Book ID to delete: ";
            cin >> id;
            list.deleteByID(id);
        }
        else if (choice == 3)
            list.displayForward();
        else if (choice == 4)
            list.displayBackward();
        else if (choice == 5)
            break;
        else
            cout << "Invalid choice.\n";
    }

    return 0;
}
